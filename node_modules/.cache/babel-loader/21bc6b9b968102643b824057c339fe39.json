{"ast":null,"code":"import _classCallCheck from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/containers/PlanetDetail.js\";\nimport React, { Component } from 'react';\nimport { Card, CardHeader, CardText, CardBody, CardTitle, Button, CardFooter, CardSubtitle, Navbar } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { makeGETRequest } from '../utilities/RestProvider';\nimport './HomePage.css';\n\nvar PlanetDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlanetDetail, _Component);\n\n  function PlanetDetail(props) {\n    var _this;\n\n    _classCallCheck(this, PlanetDetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlanetDetail).call(this, props));\n    _this.state = {\n      isLogout: false,\n      planetURL: '',\n      planetsList: []\n    };\n    return _this;\n  }\n\n  _createClass(PlanetDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var planetURL = this.props.location.state.planetURL;\n      alert(planetURL);\n    }\n  }, {\n    key: \"_handleSearchKeyPress\",\n    value: function _handleSearchKeyPress(event) {\n      var _this2 = this;\n\n      console.log(\"key pressed\" + event.target.value);\n      makeGETRequest('planets/?search=' + event.target.value, function (response) {\n        var planetsArray = response.data.results;\n        var sortedArray = [];\n\n        for (var _item = 0; _item < planetsArray.length; _item++) {\n          if (planetsArray[_item].population !== \"unknown\") {\n            sortedArray.push(planetsArray[_item]);\n          }\n        } //sort array in descending order for population\n\n\n        sortedArray.sort(function (a, b) {\n          return b.population - a.population;\n        });\n\n        _this2.setState({\n          planetsList: sortedArray\n        });\n\n        console.log(JSON.stringify(sortedArray));\n      }, function (error) {\n        alert(\"No data available for this search.\");\n      });\n    }\n  }, {\n    key: \"_displayDetailPage\",\n    value: function _displayDetailPage(itemIndex) {\n      //console.log(JSON.stringify(this.state.planetsList[itemIndex]));\n      this.setState({\n        isLogout: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLogout) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        color: \"light\",\n        light: true,\n        expand: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        size: \"sm\",\n        color: \"danger\",\n        className: \"ml-auto\",\n        onClick: function onClick() {\n          return _this3._displayDetailPage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Logout\")), React.createElement(\"div\", {\n        className: \"searchPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.planetsList.map(function (itemObject, _index) {\n        var reduceWidthPx = _index * 10 + 'px';\n        return React.createElement(\"div\", {\n          key: _index,\n          className: \"cardWrapper\",\n          style: {\n            width: 'calc(80% - ' + reduceWidthPx + ')'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Card, {\n          outline: true,\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, itemObject.name), React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Population: \", itemObject.population), React.createElement(CardSubtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Diameter: \", itemObject.diameter), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Created on: \", itemObject.created)), React.createElement(CardFooter, {\n          className: \"text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"success\",\n          onClick: function onClick() {\n            return _this3._displayDetailPage(_index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"View\"))));\n      }))));\n    }\n  }]);\n\n  return PlanetDetail;\n}(Component);\n\nexport default PlanetDetail;","map":{"version":3,"sources":["/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/containers/PlanetDetail.js"],"names":["React","Component","Card","CardHeader","CardText","CardBody","CardTitle","Button","CardFooter","CardSubtitle","Navbar","Redirect","makeGETRequest","PlanetDetail","props","state","isLogout","planetURL","planetsList","location","alert","event","console","log","target","value","response","planetsArray","data","results","sortedArray","_item","length","population","push","sort","a","b","setState","JSON","stringify","error","itemIndex","_displayDetailPage","map","itemObject","_index","reduceWidthPx","width","name","diameter","created"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardHeader, CardText, CardBody,\n  CardTitle, Button,CardFooter,CardSubtitle, Navbar , } from 'reactstrap';\n\nimport { Redirect } from 'react-router-dom';\nimport { makeGETRequest } from '../utilities/RestProvider';\nimport './HomePage.css';\n\nclass PlanetDetail extends Component {\n\n\n \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLogout: false,\n      planetURL: '',\n      planetsList: []\n    };\n\n  }\n\n\n  componentDidMount(){\n\n    let planetURL = this.props.location.state.planetURL;\n\n    alert(planetURL);\n\n  }\n\n\n  _handleSearchKeyPress(event){\n\n   console.log(\"key pressed\" + event.target.value);\n\n\n   makeGETRequest('planets/?search=' + event.target.value, \n   \n     (response) => {\n\n            let planetsArray = response.data.results;\n            let sortedArray = [];\n            \n            for(let _item=0; _item < planetsArray.length; _item++){\n              if(planetsArray[_item].population !== \"unknown\"){\n                sortedArray.push(planetsArray[_item]);\n              }\n             }\n\n             //sort array in descending order for population\n            sortedArray.sort((a, b) =>  \n              b.population -  a.population\n            );\n              \n\n            this.setState({planetsList: sortedArray});\n            console.log(JSON.stringify(sortedArray));\n\n        \n    },\n    (error) => {\n        alert(\"No data available for this search.\");\n    }\n);\n\n  }\n\n\n  _displayDetailPage(itemIndex){\n    //console.log(JSON.stringify(this.state.planetsList[itemIndex]));\n\n    this.setState({isLogout: true});\n\n  }\n\n  \n\n  render() {\n\n    \n    if (this.state.isLogout) {\n      return <Redirect to='/login' />\n    }\n\n\n    return (\n    <div className=\"container\">\n      <Navbar color=\"light\" light expand=\"md\">\n      <Button outline size=\"sm\" color=\"danger\" className=\"ml-auto\" onClick={() => this._displayDetailPage()}>\n      Logout\n      </Button>\n\n        </Navbar>\n        <div className=\"searchPage\">\n            <div>\n\n                 {\n\nthis.state.planetsList.map((itemObject, _index) => {\n\n    let reduceWidthPx = _index * 10 + 'px';\n    return (\n                      <div key = {_index} className=\"cardWrapper\" style= {{ width: 'calc(80% - ' + reduceWidthPx +  ')'}}>\n\n                          <Card outline color=\"success\">\n                          <CardHeader>{ itemObject.name }</CardHeader>\n                          <CardBody>\n                            <CardTitle>Population: { itemObject.population }</CardTitle>\n                            <CardSubtitle>Diameter: { itemObject.diameter }</CardSubtitle>\n                            <CardText>Created on: { itemObject.created }</CardText>\n                            \n                          </CardBody>\n                          <CardFooter className=\"text-muted\"><Button color=\"success\" onClick={() => this._displayDetailPage(_index)} >View</Button></CardFooter>\n                          </Card>\n                    \n                      </div>\n    )\n\n                 })\n\n                \n                \n                }\n\n      </div>\n        </div>\n    </div>\n    );\n\n  }\n}\n\nexport default PlanetDetail;"]},"metadata":{},"sourceType":"module"}