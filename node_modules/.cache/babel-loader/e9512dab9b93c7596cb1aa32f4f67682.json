{"ast":null,"code":"import _classCallCheck from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/containers/HomePage.js\";\nimport React, { Component } from 'react';\nimport { Card, CardHeader, CardText, CardBody, CardTitle, Button, CardFooter, CardSubtitle, Navbar } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { makeGETRequest } from '../utilities/RestProvider';\nimport './HomePage.css';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomePage, _Component);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this, props));\n    _this.state = {\n      planetsList: [],\n      isLogout: false,\n      isPlanetDetail: false,\n      planetURL: ''\n    };\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"_handleSearchKeyPress\",\n    value: function _handleSearchKeyPress(event) {\n      var _this2 = this;\n\n      console.log(\"key pressed\" + event.target.value);\n      makeGETRequest('planets/?search=' + event.target.value, function (response) {\n        var planetsArray = response.data.results;\n        var sortedArray = [];\n\n        for (var _item = 0; _item < planetsArray.length; _item++) {\n          if (planetsArray[_item].population !== \"unknown\") {\n            sortedArray.push(planetsArray[_item]);\n          }\n        } //sort array in descending order for population\n\n\n        sortedArray.sort(function (a, b) {\n          return b.population - a.population;\n        });\n\n        _this2.setState({\n          planetsList: sortedArray\n        });\n\n        console.log(JSON.stringify(sortedArray));\n      }, function (error) {\n        alert(\"No data available for this search.\");\n      });\n    }\n  }, {\n    key: \"_displayLoginPage\",\n    value: function _displayLoginPage(itemIndex) {\n      this.setState({\n        isLogout: true\n      });\n    }\n  }, {\n    key: \"_displayPlanetDetail\",\n    value: function _displayPlanetDetail(itemIndex) {\n      //console.log(JSON.stringify(this.state.planetsList[itemIndex]));\n      var planetURL = this.state.planetsList[itemIndex].url;\n      this.setState({\n        planetURL: planetURL,\n        isPlanetDetail: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLogout === true) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.isPlanetDetail) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/planetdetail',\n            state: {\n              planetId: this.state.planetURL\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        color: \"light\",\n        light: true,\n        expand: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        size: \"sm\",\n        color: \"danger\",\n        className: \"ml-auto\",\n        onClick: function onClick() {\n          return _this3._displayDetailPage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Logout\")), React.createElement(\"div\", {\n        className: \"searchPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"myInput\",\n        placeholder: \"Search for planets..\",\n        title: \"Type in a name\",\n        onKeyUp: function onKeyUp(evt) {\n          _this3._handleSearchKeyPress(evt);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.state.planetsList.map(function (itemObject, _index) {\n        var reduceWidthPx = _index * 10 + 'px';\n        return (// <tr key = {_index} onClick={() => this.fetchDetails()} className = \"itemRow\">\n          // <th>1</th>\n          // <td>{ itemObject.name }</td>\n          // <td>Otto</td>\n          // <td> { itemObject.population }</td>\n          // </tr>\n          React.createElement(\"div\", {\n            key: _index,\n            className: \"cardWrapper\",\n            style: {\n              width: 'calc(80% - ' + reduceWidthPx + ')'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, React.createElement(Card, {\n            outline: true,\n            color: \"success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, React.createElement(CardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, itemObject.name), React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, React.createElement(CardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, \"Population: \", itemObject.population), React.createElement(CardSubtitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, \"Diameter: \", itemObject.diameter), React.createElement(CardText, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, \"Created on: \", itemObject.created)), React.createElement(CardFooter, {\n            className: \"text-muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, React.createElement(Button, {\n            color: \"success\",\n            onClick: function onClick() {\n              return _this3._displayDetailPage(_index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, \"View\"))))\n        );\n      }))));\n    }\n  }]);\n\n  return HomePage;\n}(Component);\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/containers/HomePage.js"],"names":["React","Component","Card","CardHeader","CardText","CardBody","CardTitle","Button","CardFooter","CardSubtitle","Navbar","Redirect","makeGETRequest","HomePage","props","state","planetsList","isLogout","isPlanetDetail","planetURL","event","console","log","target","value","response","planetsArray","data","results","sortedArray","_item","length","population","push","sort","a","b","setState","JSON","stringify","error","alert","itemIndex","url","pathname","planetId","_displayDetailPage","evt","_handleSearchKeyPress","map","itemObject","_index","reduceWidthPx","width","name","diameter","created"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardHeader, CardText, CardBody,\n  CardTitle, Button,CardFooter,CardSubtitle, Navbar , } from 'reactstrap';\n\nimport { Redirect } from 'react-router-dom';\nimport { makeGETRequest } from '../utilities/RestProvider';\nimport './HomePage.css';\n\nclass HomePage extends Component {\n\n\n \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      planetsList: [],\n      isLogout: false,\n      isPlanetDetail: false,\n      planetURL : ''\n    };\n\n  }\n\n\n  _handleSearchKeyPress(event){\n\n   console.log(\"key pressed\" + event.target.value);\n\n\n   makeGETRequest('planets/?search=' + event.target.value, \n   \n     (response) => {\n\n            let planetsArray = response.data.results;\n            let sortedArray = [];\n            \n            for(let _item=0; _item < planetsArray.length; _item++){\n              if(planetsArray[_item].population !== \"unknown\"){\n                sortedArray.push(planetsArray[_item]);\n              }\n             }\n\n             //sort array in descending order for population\n            sortedArray.sort((a, b) =>  \n              b.population -  a.population\n            );\n              \n\n            this.setState({planetsList: sortedArray});\n            console.log(JSON.stringify(sortedArray));\n\n        \n    },\n    (error) => {\n        alert(\"No data available for this search.\");\n    }\n);\n\n  }\n\n  \n  _displayLoginPage(itemIndex){\n\n    this.setState({isLogout: true});\n\n  }\n\n  _displayPlanetDetail(itemIndex){\n    //console.log(JSON.stringify(this.state.planetsList[itemIndex]));\n    let planetURL = this.state.planetsList[itemIndex].url;\n    this.setState({\n         planetURL: planetURL,\n         isPlanetDetail: true\n      });\n  }\n\n  render() {\n\n    \n    if (this.state.isLogout === true) {\n      return <Redirect to='/login' />\n    }\n\n    if (this.state.isPlanetDetail) {\n      return <Redirect to={{\n          pathname: '/planetdetail',\n          state: { planetId: this.state.planetURL }\n      }}\n     />\n  }\n    return (\n    <div className=\"container\">\n      <Navbar color=\"light\" light expand=\"md\">\n      <Button outline size=\"sm\" color=\"danger\" className=\"ml-auto\" onClick={() => this._displayDetailPage()}>\n      Logout\n      </Button>\n\n        </Navbar>\n        <div className=\"searchPage\">\n            <input type=\"text\" id=\"myInput\" placeholder=\"Search for planets..\" title=\"Type in a name\" onKeyUp={(evt) => {this._handleSearchKeyPress(evt)}}/>\n            <div>\n        {/* <div className=\"col\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Card title</h5>\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>First</th>\n                    <th>Last</th>\n                    <th>Handle</th>\n                  </tr>\n                </thead>\n                <tbody> */}\n\n                 {\n\nthis.state.planetsList.map((itemObject, _index) => {\n\n    let reduceWidthPx = _index * 10 + 'px';\n    return (\n                        // <tr key = {_index} onClick={() => this.fetchDetails()} className = \"itemRow\">\n                        // <th>1</th>\n                        // <td>{ itemObject.name }</td>\n                        // <td>Otto</td>\n                        // <td> { itemObject.population }</td>\n                        // </tr>\n                      <div key = {_index} className=\"cardWrapper\" style= {{ width: 'calc(80% - ' + reduceWidthPx +  ')'}}>\n\n                          <Card outline color=\"success\">\n                          <CardHeader>{ itemObject.name }</CardHeader>\n                          <CardBody>\n                            <CardTitle>Population: { itemObject.population }</CardTitle>\n                            <CardSubtitle>Diameter: { itemObject.diameter }</CardSubtitle>\n                            <CardText>Created on: { itemObject.created }</CardText>\n                            \n                          </CardBody>\n                          <CardFooter className=\"text-muted\"><Button color=\"success\" onClick={() => this._displayDetailPage(_index)} >View</Button></CardFooter>\n                          </Card>\n                    \n                      </div>\n    )\n\n                 })\n\n                \n                \n                }\n\n                  {/* <tr>\n                    <th>2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                  </tr> */}\n                {/* </tbody>\n              </table>\n            </div>\n          </div>\n        </div> */}\n      </div>\n        </div>\n    </div>\n    );\n\n  }\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}