{"ast":null,"code":"import _classCallCheck from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/containers/PlanetDetail.js\";\nimport React, { Component } from 'react';\nimport { Card, CardHeader, CardText, CardBody, CardTitle, Button, CardFooter, CardSubtitle, Navbar } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { makeGETRequest } from '../utilities/RestProvider';\nimport './HomePage.css';\n\nvar PlanetDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlanetDetail, _Component);\n\n  function PlanetDetail(props) {\n    var _this;\n\n    _classCallCheck(this, PlanetDetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlanetDetail).call(this, props));\n    _this.state = {\n      isLogout: false,\n      planetURL: '',\n      planetDetail: {}\n    };\n    return _this;\n  }\n\n  _createClass(PlanetDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var planetURL = this.props.location.state.planetURL;\n      console.log(planetURL);\n      planetURL = planetURL.endsWith('/') ? planetURL.slice(0, -1) : planetURL;\n      var planetId = planetURL.substring(planetURL.lastIndexOf(\"/\") + 1, planetURL.length);\n      this.getPlanetDetailsFromServer(planetId);\n    }\n  }, {\n    key: \"getPlanetDetailsFromServer\",\n    value: function getPlanetDetailsFromServer(planetId) {\n      var _this2 = this;\n\n      console.log(\"planetURL \" + planetId);\n      makeGETRequest('planets/' + planetId, function (response) {\n        var planetDetailObject = response;\n\n        _this2.setState({\n          planetDetail: planetDetailObject\n        });\n\n        console.log(JSON.stringify(planetDetailObject));\n      }, function (error) {\n        alert(\"No data available for this planet.\");\n      });\n    }\n  }, {\n    key: \"_displayLoginPage\",\n    value: function _displayLoginPage() {\n      this.setState({\n        isLogout: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLogout) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        color: \"light\",\n        light: true,\n        expand: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        size: \"sm\",\n        color: \"danger\",\n        className: \"ml-auto\",\n        onClick: function onClick() {\n          return _this3._displayLogingPage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Logout\")), React.createElement(\"div\", {\n        className: \"searchPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cardWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Card, {\n        outline: true,\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.planetDetail.name), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Population: \", this.state.planetDetail.climate), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Diameter: \", this.state.planetDetail.diameter), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Gravity: \", this.state.planetDetail.gravity), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Climate: \", this.state.planetDetail.climate), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Terrain: \", this.state.planetDetail.terrain), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Orbital Period: \", this.state.planetDetail.orbital_period), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Edited on: \", this.state.planetDetail.edited)), React.createElement(CardFooter, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return PlanetDetail;\n}(Component);\n\nexport default PlanetDetail;","map":{"version":3,"sources":["/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/containers/PlanetDetail.js"],"names":["React","Component","Card","CardHeader","CardText","CardBody","CardTitle","Button","CardFooter","CardSubtitle","Navbar","Redirect","makeGETRequest","PlanetDetail","props","state","isLogout","planetURL","planetDetail","location","console","log","endsWith","slice","planetId","substring","lastIndexOf","length","getPlanetDetailsFromServer","response","planetDetailObject","setState","JSON","stringify","error","alert","_displayLogingPage","name","climate","diameter","gravity","terrain","orbital_period","edited"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardHeader, CardText, CardBody,\n  CardTitle, Button,CardFooter,CardSubtitle, Navbar , } from 'reactstrap';\n\nimport { Redirect } from 'react-router-dom';\nimport { makeGETRequest } from '../utilities/RestProvider';\nimport './HomePage.css';\n\nclass PlanetDetail extends Component {\n\n\n \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLogout: false,\n      planetURL: '',\n      planetDetail: {}\n    };\n\n  }\n\n\n  componentDidMount(){\n\n    let planetURL = this.props.location.state.planetURL;\n\n    console.log(planetURL);\n    planetURL = planetURL.endsWith('/') ? planetURL.slice(0, -1) : planetURL;\n    let planetId = planetURL.substring(planetURL.lastIndexOf(\"/\") + 1, planetURL.length);\n\n    this.getPlanetDetailsFromServer(planetId);\n\n  }\n\n\n  getPlanetDetailsFromServer(planetId){\n\n   console.log(\"planetURL \" + planetId);\n\n\n   makeGETRequest('planets/' + planetId, \n   \n     (response) => {\n\n            let planetDetailObject = response; \n\n            this.setState({planetDetail: planetDetailObject});\n            console.log(JSON.stringify(planetDetailObject));\n\n        \n    },\n    (error) => {\n        alert(\"No data available for this planet.\");\n    }\n);\n\n  }\n\n\n  _displayLoginPage(){\n\n    this.setState({isLogout: true});\n\n  }\n\n  \n\n  render() {\n\n    \n    if (this.state.isLogout) {\n      return <Redirect to='/login' />\n    }\n\n\n    return (\n    <div className=\"container\">\n      <Navbar color=\"light\" light expand=\"md\">\n      <Button outline size=\"sm\" color=\"danger\" className=\"ml-auto\" onClick={() => this._displayLogingPage()}>\n      Logout\n      </Button>\n\n        </Navbar>\n        <div className=\"searchPage\">\n            <div>\n\n            <div className=\"cardWrapper\">\n\n                <Card outline color=\"success\">\n                <CardHeader>{ this.state.planetDetail.name }</CardHeader>\n                <CardBody>\n                <CardTitle>Population: { this.state.planetDetail.climate }</CardTitle>\n                <CardSubtitle>Diameter: { this.state.planetDetail.diameter }</CardSubtitle>\n                <CardSubtitle>Gravity: { this.state.planetDetail.gravity }</CardSubtitle>\n                <CardSubtitle>Climate: { this.state.planetDetail.climate }</CardSubtitle>\n                <CardSubtitle>Terrain: { this.state.planetDetail.terrain }</CardSubtitle>\n                <CardSubtitle>Orbital Period: { this.state.planetDetail.orbital_period }</CardSubtitle>\n                <CardText>Edited on: { this.state.planetDetail.edited }</CardText>\n                \n                </CardBody>\n                <CardFooter className=\"text-muted\"></CardFooter>\n                </Card>\n        \n            </div>\n\n\n      </div>\n        </div>\n    </div>\n    );\n\n  }\n}\n\nexport default PlanetDetail;"]},"metadata":{},"sourceType":"module"}