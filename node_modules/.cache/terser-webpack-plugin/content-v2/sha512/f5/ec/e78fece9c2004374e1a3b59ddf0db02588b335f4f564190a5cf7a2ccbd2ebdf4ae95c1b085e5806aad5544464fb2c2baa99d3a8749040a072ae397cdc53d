{"map":"{\"version\":3,\"sources\":[\"/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/utilities/RestProvider.js\",\"/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/utilities/config.js\",\"/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/containers/Login.js\",\"/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/containers/HomePage.js\",\"/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/containers/PlanetDetail.js\",\"/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/AppRouting.js\",\"/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/App.js\",\"/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/serviceWorker.js\",\"/Users/jitendra/Documents/ReactJSDemo/sampleapp/src/index.js\"],\"names\":[\"makeGETRequest\",\"METHOD\",\"successCallback\",\"errorCallback\",\"axios\",\"get\",\"then\",\"response\",\"catch\",\"error\",\"LoginPage\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"username\",\"password\",\"toDashboard\",\"handlePassChange\",\"bind\",\"assertThisInitialized\",\"handleUserChange\",\"handleSubmit\",\"setState\",\"evt\",\"preventDefault\",\"validateStarWarsUser\",\"alert\",\"_this2\",\"hasOwnProperty\",\"peoplesArray\",\"data\",\"results\",\"isUserExist\",\"console\",\"log\",\"_item\",\"length\",\"name\",\"birth_year\",\"target\",\"value\",\"react_default\",\"a\",\"createElement\",\"Redirect\",\"to\",\"className\",\"onSubmit\",\"type\",\"placeholder\",\"onChange\",\"Component\",\"withRouter\",\"HomePage\",\"props\",\"planetsList\",\"isLogout\",\"isPlanetDetail\",\"planetURL\",\"event\",\"planetsArray\",\"sortedArray\",\"population\",\"push\",\"sort\",\"b\",\"JSON\",\"stringify\",\"itemIndex\",\"url\",\"_this3\",\"pathname\",\"reactstrap_es\",\"color\",\"light\",\"expand\",\"outline\",\"size\",\"onClick\",\"_displayLoginPage\",\"id\",\"title\",\"onKeyUp\",\"_handleSearchKeyPress\",\"map\",\"itemObject\",\"_index\",\"reduceWidthPx\",\"key\",\"style\",\"width\",\"diameter\",\"created\",\"_displayPlanetDetail\",\"PlanetDetail\",\"planetDetail\",\"isLoading\",\"location\",\"planetId\",\"endsWith\",\"slice\",\"substring\",\"lastIndexOf\",\"getPlanetDetailsFromServer\",\"planetDetailObject\",\"_displayLogingPage\",\"gravity\",\"climate\",\"terrain\",\"orbital_period\",\"edited\",\"AppRouting\",\"BrowserRouter\",\"Switch\",\"Route\",\"component\",\"Login\",\"exact\",\"path\",\"App\",\"Boolean\",\"window\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import axios from 'axios';\\nimport { API_BASEURL } from './config';\\n\\nexport const makeGETRequest = (METHOD, successCallback, errorCallback) =>{\\n  \\n\\n\\n        axios.get(API_BASEURL + METHOD)\\n        .then((response) => {\\n     \\n            successCallback(response);\\n     \\n        })\\n        .catch(function (error) {\\n\\n            errorCallback(error);\\n            \\n        });\\n\\n}\",\"export const API_BASEURL = \\\"https://swapi.co/api/\\\";\",\"import React, { Component } from 'react';\\nimport { withRouter, Redirect } from 'react-router-dom';\\n\\nimport { makeGETRequest } from '../utilities/RestProvider';\\n\\nimport './Login.css';\\n\\nclass LoginPage extends Component {\\n  constructor() {\\n    super();\\n    this.state = {\\n      username: '',\\n      password: '',\\n      error: '',\\n      toDashboard: false\\n    };\\n\\n    this.handlePassChange = this.handlePassChange.bind(this);\\n    this.handleUserChange = this.handleUserChange.bind(this);\\n    this.handleSubmit = this.handleSubmit.bind(this);\\n\\n  }\\n\\n  dismissError() {\\n    this.setState({ error: '' });\\n  }\\n\\n  handleSubmit(evt) {\\n    \\n    evt.preventDefault();\\n\\n    if (!this.state.username) {\\n      alert(\\\"Username is required\\\");\\n      return;\\n\\n    }\\n\\n    if (!this.state.password) {\\n      alert(\\\"Password is required\\\");\\n      return;\\n    }\\n\\n    this.validateStarWarsUser();\\n\\n  }\\n\\n  validateStarWarsUser(){\\n\\n      makeGETRequest('people', (response) => {\\n              if(response.hasOwnProperty(\\\"data\\\")){\\n                  \\n                let peoplesArray = response.data.results;\\n      \\n                if(this.isUserExist(peoplesArray)){\\n      \\n                    console.log(\\\"Valid User.\\\");\\n                    this.setState({toDashboard: true});\\n                }\\n                else{\\n        \\n                    alert(\\\"Invalid Username or Password.\\\");\\n      \\n                }\\n                \\n        \\n            }\\n            else{\\n      \\n              alert(\\\"User does not exist.\\\");\\n      \\n            }\\n\\n        },\\n        (error) => {\\n          alert(\\\"Internal server error.\\\");\\n        }\\n        );\\n\\n  }\\n\\n  isUserExist(peoplesArray){\\n\\n    for(let _item=0; _item < peoplesArray.length; _item++){\\n\\n      if(peoplesArray[_item].name === this.state.username && peoplesArray[_item].birth_year === this.state.password){\\n        \\n        return true;\\n\\n      }\\n    }\\n\\n    return false;\\n}\\n\\n  handleUserChange(evt) {\\n    this.setState({\\n      username: evt.target.value,\\n    });\\n  };\\n\\n  handlePassChange(evt) {\\n    this.setState({\\n      password: evt.target.value,\\n    });\\n  }\\n\\n  render() {\\n\\n    if (this.state.toDashboard === true) {\\n      return <Redirect to='/home' />\\n    }\\n    return (\\n\\n        <div className=\\\"loginPage\\\">\\n\\n            <form onSubmit = {this.handleSubmit}>\\n            <div className=\\\"container\\\">\\n              <div className=\\\"form-group\\\">\\n                <label><b>Username</b></label>\\n                <input type=\\\"text\\\" placeholder=\\\"Enter Username\\\" name=\\\"uname\\\" onChange = {this.handleUserChange}/>\\n              </div>\\n              <div className=\\\"form-group\\\">\\n                <label><b>Password</b></label>\\n                <input type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"psw\\\" onChange = {this.handlePassChange}/>\\n              </div>\\n              <button type=\\\"submit\\\" className=\\\"submitbutton\\\">Login</button>\\n\\n            </div>\\n\\n            </form>\\n\\n        </div>\\n\\n    );\\n  }\\n}\\n\\nexport default withRouter(LoginPage);\",\"import React, { Component } from 'react';\\nimport { Card, CardHeader, CardText, CardBody,\\n  CardTitle, Button,CardFooter,CardSubtitle, Navbar , } from 'reactstrap';\\n\\nimport { Redirect } from 'react-router-dom';\\nimport { makeGETRequest } from '../utilities/RestProvider';\\nimport './HomePage.css';\\n\\nclass HomePage extends Component {\\n\\n\\n \\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      planetsList: [],\\n      isLogout: false,\\n      isPlanetDetail: false,\\n      planetURL : ''\\n    };\\n\\n  }\\n\\n\\n  _handleSearchKeyPress(event){\\n\\n   console.log(\\\"key pressed\\\" + event.target.value);\\n\\n\\n   makeGETRequest('planets/?search=' + event.target.value, \\n   \\n     (response) => {\\n\\n            let planetsArray = response.data.results;\\n            let sortedArray = [];\\n            \\n            for(let _item=0; _item < planetsArray.length; _item++){\\n              if(planetsArray[_item].population !== \\\"unknown\\\"){\\n                sortedArray.push(planetsArray[_item]);\\n              }\\n             }\\n\\n             //sort array in descending order for population\\n            sortedArray.sort((a, b) =>  \\n              b.population -  a.population\\n            );\\n              \\n\\n            this.setState({planetsList: sortedArray});\\n            console.log(JSON.stringify(sortedArray));\\n\\n        \\n    },\\n    (error) => {\\n        alert(\\\"No data available for this search.\\\");\\n    }\\n);\\n\\n  }\\n\\n  \\n  _displayLoginPage(itemIndex){\\n\\n    this.setState({isLogout: true});\\n\\n  }\\n\\n  _displayPlanetDetail(itemIndex){\\n    //console.log(JSON.stringify(this.state.planetsList[itemIndex]));\\n    let planetURL = this.state.planetsList[itemIndex].url;\\n    this.setState({\\n         planetURL: planetURL,\\n         isPlanetDetail: true\\n      });\\n  }\\n\\n  render() {\\n\\n    \\n    if (this.state.isLogout === true) {\\n      return <Redirect to='/login' />\\n    }\\n\\n    if (this.state.isPlanetDetail) {\\n      return <Redirect to={{\\n          pathname: '/planetdetail',\\n          state: { planetURL: this.state.planetURL }\\n      }}\\n     />\\n  }\\n    return (\\n    <div className=\\\"container\\\">\\n      <Navbar color=\\\"light\\\" light expand=\\\"md\\\">\\n      <Button outline size=\\\"sm\\\" color=\\\"danger\\\" className=\\\"ml-auto\\\" onClick={() => this._displayLoginPage()}>\\n      Logout\\n      </Button>\\n\\n        </Navbar>\\n        <div className=\\\"searchPage\\\">\\n            <input type=\\\"text\\\" id=\\\"myInput\\\" placeholder=\\\"Search for planets..\\\" title=\\\"Type in a name\\\" onKeyUp={(evt) => {this._handleSearchKeyPress(evt)}}/>\\n            <div>\\n\\n                 {\\n\\nthis.state.planetsList.map((itemObject, _index) => {\\n\\n    let reduceWidthPx = _index * 10 + 'px';\\n    return (\\n\\n                      <div key = {_index} className=\\\"cardWrapper\\\" style= {{ width: 'calc(80% - ' + reduceWidthPx +  ')'}}>\\n\\n                          <Card outline color=\\\"success\\\">\\n                          <CardHeader>{ itemObject.name }</CardHeader>\\n                          <CardBody>\\n                            <CardTitle>Population: { itemObject.population }</CardTitle>\\n                            <CardSubtitle>Diameter: { itemObject.diameter }</CardSubtitle>\\n                            <CardText>Created on: { itemObject.created }</CardText>\\n                            \\n                          </CardBody>\\n                          <CardFooter className=\\\"text-muted\\\"><Button color=\\\"success\\\" onClick={() => this._displayPlanetDetail(_index)} >View</Button></CardFooter>\\n                          </Card>\\n                    \\n                      </div>\\n    )\\n\\n                 })\\n\\n                \\n                \\n                }\\n\\n      </div>\\n        </div>\\n    </div>\\n    );\\n\\n  }\\n}\\n\\nexport default HomePage;\\n\",\"import React, { Component } from 'react';\\nimport { Card, CardHeader, CardText, CardBody,\\n  CardTitle, Button,CardFooter,CardSubtitle, Navbar , } from 'reactstrap';\\n\\nimport { Redirect } from 'react-router-dom';\\nimport { makeGETRequest } from '../utilities/RestProvider';\\nimport './HomePage.css';\\n\\nclass PlanetDetail extends Component {\\n\\n\\n \\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      isLogout: false,\\n      planetURL: '',\\n      planetDetail: {},\\n      isLoading: true\\n    };\\n\\n  }\\n\\n\\n  componentDidMount(){\\n\\n    let planetURL = this.props.location.state.planetURL;\\n\\n    console.log(planetURL);\\n    planetURL = planetURL.endsWith('/') ? planetURL.slice(0, -1) : planetURL;\\n    let planetId = planetURL.substring(planetURL.lastIndexOf(\\\"/\\\") + 1, planetURL.length);\\n\\n    this.getPlanetDetailsFromServer(planetId);\\n\\n  }\\n\\n\\n  getPlanetDetailsFromServer(planetId){\\n\\n   console.log(\\\"planetURL \\\" + planetId);\\n\\n\\n   makeGETRequest('planets/' + planetId, \\n   \\n     (response) => {\\n\\n            this.setState({isLoading: false});\\n            let planetDetailObject = response.data; \\n            this.setState({planetDetail: planetDetailObject});\\n            console.log(JSON.stringify(planetDetailObject));\\n\\n\\n        \\n    },\\n    (error) => {\\n        alert(\\\"No data available for this planet.\\\");\\n    }\\n);\\n\\n  }\\n\\n\\n  _displayLoginPage(){\\n\\n    this.setState({isLogout: true});\\n\\n  }\\n\\n  \\n\\n  render() {\\n\\n    \\n    if (this.state.isLogout) {\\n      return <Redirect to='/login' />\\n    }\\n\\n    if (this.state.isLoading) return null;\\n\\n    return (\\n    <div className=\\\"container\\\">\\n      <Navbar color=\\\"light\\\" light expand=\\\"md\\\">\\n      <Button outline size=\\\"sm\\\" color=\\\"danger\\\" className=\\\"ml-auto\\\" onClick={() => this._displayLogingPage()}>\\n      Logout\\n      </Button>\\n\\n        </Navbar>\\n        <div className=\\\"searchPage\\\">\\n            <div>\\n\\n            <div className=\\\"cardWrapper\\\">\\n\\n                <Card outline color=\\\"success\\\">\\n                <CardHeader>{ this.state.planetDetail.name }</CardHeader>\\n                <CardBody>\\n                <CardTitle>Population: { this.state.planetDetail.population }</CardTitle>\\n                <CardSubtitle className=\\\"cardSubTitle\\\">Diameter: { this.state.planetDetail.diameter }</CardSubtitle>\\n                <CardSubtitle className=\\\"cardSubTitle\\\">Gravity: { this.state.planetDetail.gravity }</CardSubtitle>\\n                <CardSubtitle className=\\\"cardSubTitle\\\">Climate: { this.state.planetDetail.climate }</CardSubtitle>\\n                <CardSubtitle className=\\\"cardSubTitle\\\">Terrain: { this.state.planetDetail.terrain }</CardSubtitle>\\n                <CardSubtitle className=\\\"cardSubTitle\\\">Orbital Period: { this.state.planetDetail.orbital_period }</CardSubtitle>\\n                <CardSubtitle className=\\\"cardSubTitle\\\">Edited on: { this.state.planetDetail.edited }</CardSubtitle>\\n                \\n                </CardBody>\\n                <CardFooter className=\\\"text-muted\\\"></CardFooter>\\n                </Card>\\n        \\n            </div>\\n\\n\\n      </div>\\n        </div>\\n    </div>\\n    );\\n\\n  }\\n}\\n\\nexport default PlanetDetail;\",\"// LIBRARY\\nimport React from 'react';\\nimport { BrowserRouter as Router, Route ,Switch} from 'react-router-dom';\\n\\n// COMPONENT\\nimport Login from './containers/Login';\\nimport HomePage from './containers/HomePage';\\nimport PlanetDetail from './containers/PlanetDetail';\\n\\n\\nexport default (\\n    <Router>\\n\\n       <Switch>\\n\\n       <Route component={Login} exact path='/' />\\n       <Route component={Login} exact path='/login' />       \\n        <Route exact component={HomePage} path='/home' />\\n        <Route exact component={PlanetDetail} path='/planetdetail' />\\n        \\n       </Switch>\\n\\n\\n    </Router>\\n\\n);\\n\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport AppRouting from './AppRouting';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div>\\n         { AppRouting }\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport 'bootstrap/dist/css/bootstrap.css';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{30:function(e,t,a){},35:function(e,t,a){e.exports=a(71)},42:function(e,t,a){},44:function(e,t,a){},65:function(e,t,a){},71:function(e,t,a){\"use strict\";a.r(t);var n=a(1),l=a.n(n),r=a(14),s=a.n(r),i=(a(40),a(42),a(9)),o=a(10),c=a(12),u=a(11),m=a(13),h=(a(44),a(73)),d=a(75),p=a(72),g=a(8),f=a(74),v=a(76),E=a(32),b=a.n(E),y=function(e,t,a){b.a.get(\"https://swapi.co/api/\"+e).then(function(e){t(e)}).catch(function(e){a(e)})},O=(a(65),function(e){function t(){var e;return Object(i.a)(this,t),(e=Object(c.a)(this,Object(u.a)(t).call(this))).state={username:\"\",password:\"\",error:\"\",toDashboard:!1},e.handlePassChange=e.handlePassChange.bind(Object(g.a)(Object(g.a)(e))),e.handleUserChange=e.handleUserChange.bind(Object(g.a)(Object(g.a)(e))),e.handleSubmit=e.handleSubmit.bind(Object(g.a)(Object(g.a)(e))),e}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"dismissError\",value:function(){this.setState({error:\"\"})}},{key:\"handleSubmit\",value:function(e){e.preventDefault(),this.state.username?this.state.password?this.validateStarWarsUser():alert(\"Password is required\"):alert(\"Username is required\")}},{key:\"validateStarWarsUser\",value:function(){var e=this;y(\"people\",function(t){if(t.hasOwnProperty(\"data\")){var a=t.data.results;e.isUserExist(a)?(console.log(\"Valid User.\"),e.setState({toDashboard:!0})):alert(\"Invalid Username or Password.\")}else alert(\"User does not exist.\")},function(e){alert(\"Internal server error.\")})}},{key:\"isUserExist\",value:function(e){for(var t=0;t<e.length;t++)if(e[t].name===this.state.username&&e[t].birth_year===this.state.password)return!0;return!1}},{key:\"handleUserChange\",value:function(e){this.setState({username:e.target.value})}},{key:\"handlePassChange\",value:function(e){this.setState({password:e.target.value})}},{key:\"render\",value:function(){return!0===this.state.toDashboard?l.a.createElement(f.a,{to:\"/home\"}):l.a.createElement(\"div\",{className:\"loginPage\"},l.a.createElement(\"form\",{onSubmit:this.handleSubmit},l.a.createElement(\"div\",{className:\"container\"},l.a.createElement(\"div\",{className:\"form-group\"},l.a.createElement(\"label\",null,l.a.createElement(\"b\",null,\"Username\")),l.a.createElement(\"input\",{type:\"text\",placeholder:\"Enter Username\",name:\"uname\",onChange:this.handleUserChange})),l.a.createElement(\"div\",{className:\"form-group\"},l.a.createElement(\"label\",null,l.a.createElement(\"b\",null,\"Password\")),l.a.createElement(\"input\",{type:\"password\",placeholder:\"Enter Password\",name:\"psw\",onChange:this.handlePassChange})),l.a.createElement(\"button\",{type:\"submit\",className:\"submitbutton\"},\"Login\"))))}}]),t}(n.Component)),S=Object(v.a)(O),P=a(3),j=(a(30),function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={planetsList:[],isLogout:!1,isPlanetDetail:!1,planetURL:\"\"},a}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"_handleSearchKeyPress\",value:function(e){var t=this;console.log(\"key pressed\"+e.target.value),y(\"planets/?search=\"+e.target.value,function(e){for(var a=e.data.results,n=[],l=0;l<a.length;l++)\"unknown\"!==a[l].population&&n.push(a[l]);n.sort(function(e,t){return t.population-e.population}),t.setState({planetsList:n}),console.log(JSON.stringify(n))},function(e){alert(\"No data available for this search.\")})}},{key:\"_displayLoginPage\",value:function(e){this.setState({isLogout:!0})}},{key:\"_displayPlanetDetail\",value:function(e){var t=this.state.planetsList[e].url;this.setState({planetURL:t,isPlanetDetail:!0})}},{key:\"render\",value:function(){var e=this;return!0===this.state.isLogout?l.a.createElement(f.a,{to:\"/login\"}):this.state.isPlanetDetail?l.a.createElement(f.a,{to:{pathname:\"/planetdetail\",state:{planetURL:this.state.planetURL}}}):l.a.createElement(\"div\",{className:\"container\"},l.a.createElement(P.i,{color:\"light\",light:!0,expand:\"md\"},l.a.createElement(P.a,{outline:!0,size:\"sm\",color:\"danger\",className:\"ml-auto\",onClick:function(){return e._displayLoginPage()}},\"Logout\")),l.a.createElement(\"div\",{className:\"searchPage\"},l.a.createElement(\"input\",{type:\"text\",id:\"myInput\",placeholder:\"Search for planets..\",title:\"Type in a name\",onKeyUp:function(t){e._handleSearchKeyPress(t)}}),l.a.createElement(\"div\",null,this.state.planetsList.map(function(t,a){var n=10*a+\"px\";return l.a.createElement(\"div\",{key:a,className:\"cardWrapper\",style:{width:\"calc(80% - \"+n+\")\"}},l.a.createElement(P.b,{outline:!0,color:\"success\"},l.a.createElement(P.e,null,t.name),l.a.createElement(P.c,null,l.a.createElement(P.h,null,\"Population: \",t.population),l.a.createElement(P.f,null,\"Diameter: \",t.diameter),l.a.createElement(P.g,null,\"Created on: \",t.created)),l.a.createElement(P.d,{className:\"text-muted\"},l.a.createElement(P.a,{color:\"success\",onClick:function(){return e._displayPlanetDetail(a)}},\"View\"))))}))))}}]),t}(n.Component)),w=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(c.a)(this,Object(u.a)(t).call(this,e))).state={isLogout:!1,planetURL:\"\",planetDetail:{},isLoading:!0},a}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"componentDidMount\",value:function(){var e=this.props.location.state.planetURL;console.log(e);var t=(e=e.endsWith(\"/\")?e.slice(0,-1):e).substring(e.lastIndexOf(\"/\")+1,e.length);this.getPlanetDetailsFromServer(t)}},{key:\"getPlanetDetailsFromServer\",value:function(e){var t=this;console.log(\"planetURL \"+e),y(\"planets/\"+e,function(e){t.setState({isLoading:!1});var a=e.data;t.setState({planetDetail:a}),console.log(JSON.stringify(a))},function(e){alert(\"No data available for this planet.\")})}},{key:\"_displayLoginPage\",value:function(){this.setState({isLogout:!0})}},{key:\"render\",value:function(){var e=this;return this.state.isLogout?l.a.createElement(f.a,{to:\"/login\"}):this.state.isLoading?null:l.a.createElement(\"div\",{className:\"container\"},l.a.createElement(P.i,{color:\"light\",light:!0,expand:\"md\"},l.a.createElement(P.a,{outline:!0,size:\"sm\",color:\"danger\",className:\"ml-auto\",onClick:function(){return e._displayLogingPage()}},\"Logout\")),l.a.createElement(\"div\",{className:\"searchPage\"},l.a.createElement(\"div\",null,l.a.createElement(\"div\",{className:\"cardWrapper\"},l.a.createElement(P.b,{outline:!0,color:\"success\"},l.a.createElement(P.e,null,this.state.planetDetail.name),l.a.createElement(P.c,null,l.a.createElement(P.h,null,\"Population: \",this.state.planetDetail.population),l.a.createElement(P.f,{className:\"cardSubTitle\"},\"Diameter: \",this.state.planetDetail.diameter),l.a.createElement(P.f,{className:\"cardSubTitle\"},\"Gravity: \",this.state.planetDetail.gravity),l.a.createElement(P.f,{className:\"cardSubTitle\"},\"Climate: \",this.state.planetDetail.climate),l.a.createElement(P.f,{className:\"cardSubTitle\"},\"Terrain: \",this.state.planetDetail.terrain),l.a.createElement(P.f,{className:\"cardSubTitle\"},\"Orbital Period: \",this.state.planetDetail.orbital_period),l.a.createElement(P.f,{className:\"cardSubTitle\"},\"Edited on: \",this.state.planetDetail.edited)),l.a.createElement(P.d,{className:\"text-muted\"}))))))}}]),t}(n.Component),L=l.a.createElement(h.a,null,l.a.createElement(d.a,null,l.a.createElement(p.a,{component:S,exact:!0,path:\"/\"}),l.a.createElement(p.a,{component:S,exact:!0,path:\"/login\"}),l.a.createElement(p.a,{exact:!0,component:j,path:\"/home\"}),l.a.createElement(p.a,{exact:!0,component:w,path:\"/planetdetail\"}))),k=function(e){function t(){return Object(i.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"render\",value:function(){return l.a.createElement(\"div\",null,L)}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(l.a.createElement(k,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[35,2,1]]]);","extractedComments":[]}